q()
library(ENMeval)
library(ENMeval)
library(raster)
install.packages("sp")
library(ENMeval)
library(ENMeval)
library(raster)
install.packages("sp")
library(ENMeval)
install.packages("sf")
library(ENMeval)
library(raster)
setwd("E:/ENMEvaluate/enmevaluate_for_enmeval_2.0")
library(ENMeval)
library(raster)
library(MASS)
library(ENMeval)
library(raster)
library(MASS)
#put here the names of your environmental layers, following the pattern below:
prec1 <- raster("prec_ACCESS-CM2_2021-2040.asc")
prec2 <- raster("prec_BCC-CSM2-MR_2021-2040.asc")
tmax1 <- raster("tmax_ACCESS-CM2_2021-2040.asc")
tmax2 <- raster("tmax_BCC-CSM2-MR_2021-2040.asc")
tmin1 <- raster("tmin_ACCESS-CM2_2021-2040.asc")
tmin2 <- raster("tmin_BCC-CSM2-MR_2021-2040.asc")
env <- stack(prec1, prec2, tmax1, tmax2, tmin1, tmin2)
env
occ <- read.csv("wsmv.csv")[,-1]
occur.ras <- rasterize(occ, env, 1)
plot(occur.ras)
presences <- which(values(occur.ras) == 1)
pres.locs <- coordinates(occur.ras)[presences, ]
dens <- kde2d(pres.locs[,1], pres.locs[,2], n = c(nrow(occur.ras), ncol(occur.ras)), lims = c(extent(env)[1], extent(env)[2], extent(env)[3], extent(env)[4]))
dens.ras <- raster(dens, env)
dens.ras2 <- resample(dens.ras, env)
writeRaster(dens.ras2, "biasfile.asc", overwrite = TRUE)
length(which(!is.na(values(subset(env, 1)))))
result <- length(which(!is.na(values(subset(env, 1)))))
print(result)
#If this number is far in excess of 10,000, then use 10,000 background points.
#If this number is far in excess of 10,000, then use 10,000 background points.
#If this number is comprable to, or smaller than 10,000, then use 5,000, 1,000, 500,
#or even 100 background points. The number of available non-NA spaces should
#For the evalution below, we need to convert the bias object into another format.
#For the evalution below, we need to convert the bias object into another format.
#The code is set up to sample 10,000 background points. It would be better we
#sample 10,000 background points, since there are 12532612 enough places available.
bg <- xyFromCell(dens.ras2, sample(which(!is.na(values(subset(env, 1)))), 10000, prob=values(dens.ras2)[!is.na(values(subset(env, 1)))])
colnames(bg) <- colnames(occ)
bg <- xyFromCell(dens.ras2, sample(which(!is.na(values(subset(env, 1)))), 10000, prob=values(dens.ras2)[!is.na(values(subset(env, 1)))]))
enmeval_results <- ENMevaluate(occ, env, bg, tune.args = list(fc = c("L","LQ","H", "LQH", "LQHP", "LQHPT"), rm = 1:5), partitions = "randomkfold", partition.settings = list(kfolds = 10), algorithm = "maxnet")
colnames(bg) <- colnames(occ)
enmeval_results <- ENMevaluate(occ, env, bg, tune.args = list(fc = c("L","LQ","H", "LQH", "LQHP", "LQHPT"), rm = 1:5), partitions = "randomkfold", partition.settings = list(kfolds = 10), algorithm = "maxnet")
install.packages("ecospat")
enmeval_results <- ENMevaluate(occ, env, bg, tune.args = list(fc = c("L","LQ","H", "LQH", "LQHP", "LQHPT"), rm = 1:5), partitions = "randomkfold", partition.settings = list(kfolds = 10), algorithm = "maxnet")
write.csv(enmeval_results@results, "enmeval_results.csv")
